{"version":3,"sources":["common/User.js","common/Auth.js","common/Login.js","common/Logout.js","pages/Home.js","pages/List1.js","pages/List2.js","pages/Tutorial.js","common/Header.js","App.js","serviceWorker.js","index.js"],"names":["isLoggedIn","get","set","key","value","localStorage","setItem","getLocalStorage","ret","getItem","login","email","password","a","logout","Auth","props","User","children","to","useStyles","makeStyles","theme","root","display","form","margin","spacing","width","Layout","classes","className","noValidate","autoComplete","TextField","id","label","type","Button","variant","onClick","buttonClick","Login","click","state","history","push","pathname","setState","errMessage","handleChange","e","target","this","Component","withRouter","Logout","Container","Row","Home","List1","FormPropsTextFields","required","defaultValue","disabled","InputProps","readOnly","InputLabelProps","shrink","helperText","List2","Square","Board","i","squares","renderSquare","React","Game","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","b","c","flexGrow","menuButton","marginRight","title","list","logoutLink","color","menuLink","ButtonAppBar","useState","left","toggleDrawer","anchor","open","event","role","onKeyDown","List","subheader","ListSubheader","component","name","path","index","ListItem","button","ListItemText","primary","AppBar","position","Toolbar","IconButton","edge","aria-label","Fragment","Drawer","onClose","Typography","App","exact","Tutorial","from","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55496dc3.chunk.js","sourcesContent":["class User {\r\n  isLoggedIn = () => this.get('isLoggedIn') === 'true';\r\n\r\n  set = (key, value) => localStorage.setItem(key, value);\r\n\r\n  get = key => this.getLocalStorage(key);\r\n\r\n  getLocalStorage = key => {\r\n    const ret = localStorage.getItem(key);\r\n    if (ret) {\r\n      return ret;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  login = async (email, password) => {\r\n    // ログイン処理\r\n    // ログインエラー時には、falseを返してもいいし、returnを別の用途で利用したかったら\r\n    // 例外を出しして呼び出し元でcatchしてもいいかと思います。\r\n\r\n    this.set('isLoggedIn', true);\r\n\r\n    return true;\r\n  };\r\n\r\n  logout = async () => {\r\n    if (this.isLoggedIn()) {\r\n      this.set('isLoggedIn', false);\r\n\r\n      // ログアウト処理\r\n      //　他に必要な処理があるのならこちら\r\n\r\n    }\r\n  };\r\n}\r\n\r\nexport default new User();\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport User from './User';\r\n\r\nconst Auth = props =>\r\n  User.isLoggedIn() ? props.children : <Redirect to={'/login'} />;\r\n\r\nexport default Auth;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport User from './User';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"align-items\": \"center\",\r\n    \"justify-content\": \"center\"\r\n  },\r\n  form: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '300px',\r\n    },\r\n    '& .MuiButton-root': {\r\n      margin: theme.spacing(1),\r\n      width: '300px',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Layout(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root} >\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n        <h1>ログイン</h1>\r\n        <div>\r\n          <TextField id=\"standard\" label=\"メールアドレス\"  />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            id=\"standard-password-input\"\r\n            label=\"パスワード\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" onClick={props.buttonClick} >ログイン</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      errMessage: '',\r\n    };\r\n  }\r\n\r\n  click = async () => {\r\n    try {\r\n      await User.login(this.state.email, this.state.password);\r\n\r\n      this.props.history.push({ pathname: '/' });\r\n    } catch (e) {\r\n      this.setState({ errMessage: 'メールアドレスかパスワードが違います' });\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <Layout buttonClick={this.click} />\r\n    )\r\n  }\r\n\r\n  // render() {\r\n  //   return (\r\n  //     <Container className=\"login-center\">\r\n  //       <Row className=\"justify-content-md-center\">\r\n  //         <Form>\r\n  //           {this.state.errMessage && (\r\n  //             <Alert variant=\"danger\">{this.props.message}</Alert>\r\n  //           )}\r\n  //           <p>\r\n  //             <b>ログイン</b>\r\n  //           </p>\r\n  //           <Form.Group controlId=\"email\">\r\n  //             <Form.Label>メールアドレス</Form.Label>\r\n  //             <Form.Control\r\n  //               type=\"email\"\r\n  //               placeholder=\"メールアドレスを入力してください\"\r\n  //               onChange={this.handleChange}\r\n  //               value={this.state.email}\r\n  //             />\r\n  //           </Form.Group>\r\n  //           <Form.Group controlId=\"password\">\r\n  //             <Form.Label>パスワード</Form.Label>\r\n  //             <Form.Control\r\n  //               type=\"password\"\r\n  //               placeholder=\"パスワードを入力してください\"\r\n  //               onChange={this.handleChange}\r\n  //               value={this.state.password}\r\n  //             />\r\n  //           </Form.Group>\r\n  //           <Button variant=\"primary\" type=\"button\" onClick={this.click}>\r\n  //             ログイン\r\n  //           </Button>\r\n  //         </Form>\r\n  //       </Row>\r\n  //     </Container>\r\n  //   );\r\n  // }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport User from './User';\r\n\r\nexport default class Logout extends Component {\r\n  async componentDidMount() {\r\n    await User.logout();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"center\">\r\n        <Row className=\"justify-content-md-center\">\r\n          <div>\r\n            <h2>ログアウトしました</h2>\r\n            <div className=\"text-center\">\r\n              <Link to=\"/login\">ログイン画面へ</Link>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"align-items\": \"center\",\r\n    \"justify-content\": \"center\"\r\n  },\r\n}));\r\n\r\nfunction Layout(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root} >page Home</div>\r\n  );\r\n}\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Layout />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"align-items\": \"center\",\r\n    \"justify-content\": \"center\"\r\n  },\r\n}));\r\n\r\nfunction Layout(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root} >List1</div>\r\n  );\r\n}\r\n\r\nclass List1 extends Component {\r\n  render() {\r\n    return (\r\n      <Layout />\r\n    );\r\n  }\r\n}\r\n\r\nexport default List1;","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction FormPropsTextFields(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <div>\r\n        <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"Hello World\" />\r\n        <TextField disabled id=\"standard-disabled\" label=\"Disabled\" defaultValue=\"Hello World\" />\r\n        <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n        />\r\n        <TextField\r\n          id=\"standard-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField id=\"standard-search\" label=\"Search field\" type=\"search\" />\r\n        <TextField\r\n          id=\"standard-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"filled-required\"\r\n          label=\"Required\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"filled-disabled\"\r\n          label=\"Disabled\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField\r\n          id=\"filled-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"filled\"\r\n        />\r\n        <TextField id=\"filled-search\" label=\"Search field\" type=\"search\" variant=\"filled\" />\r\n        <TextField\r\n          id=\"filled-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n          variant=\"filled\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField\r\n          required\r\n          id=\"outlined-required\"\r\n          label=\"Required\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          disabled\r\n          id=\"outlined-disabled\"\r\n          label=\"Disabled\"\r\n          defaultValue=\"Hello World\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-read-only-input\"\r\n          label=\"Read Only\"\r\n          defaultValue=\"Hello World\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField\r\n          id=\"outlined-number\"\r\n          label=\"Number\"\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          variant=\"outlined\"\r\n        />\r\n        <TextField id=\"outlined-search\" label=\"Search field\" type=\"search\" variant=\"outlined\" />\r\n        <TextField\r\n          id=\"outlined-helperText\"\r\n          label=\"Helper text\"\r\n          defaultValue=\"Default Value\"\r\n          helperText=\"Some important text\"\r\n          variant=\"outlined\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default class List2 extends Component {\r\n  render() {\r\n    return (\r\n      <FormPropsTextFields />\r\n      );\r\n  }\r\n}","import React  from 'react';\r\nimport './Tutorial.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={ props.onClick }>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square value={this.props.squares[i]} onClick={ () => this.props.onClick(i)} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{ status }</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\n\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// import Link from '@material-ui/core/Link';\nimport { Link } from 'react-router-dom';\n// import { Link } from 'gatsby';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250\n  },\n  logoutLink: {\n    color: \"white\",\n    \"text-decoration\": \"none\",\n    \"&:hover\": {\n      color: \"white\",\n      \"text-decoration\": \"none\"\n    }\n  },\n  menuLink: {\n    color: \"#3f51b5\",\n    \"text-decoration\": \"none\",\n    \"&:hover\": {\n      color: \"#3f51b5\",\n      \"text-decoration\": \"none\"\n    }\n  }\n}));\n\n\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    left: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [anchor]: open });\n  };\n\n  const listData = [\n    { name: \"Home\", path: \"/\" },\n    { name: \"List1\", path: \"/list1\" },\n    { name: \"List2\", path: \"/list2\" },\n    { name: \"Tutorial\", path: \"/Tutorial\" },\n  ];\n\n  const list = (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(\"left\", false)}\n      onKeyDown={toggleDrawer(\"left\", false)}\n    >\n      <List subheader={ <ListSubheader component=\"div\" id=\"nested-list-subheader\"> Menu </ListSubheader> } >\n        {listData.map((value, index) => (\n          <Link to={value.path} className={classes.menuLink} >\n            <ListItem button key={value.name}>\n              {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\n              <ListItemText primary={value.name} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n      {/* <Divider /> */}\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} onClick={toggleDrawer(\"left\", true)} color=\"inherit\" aria-label=\"menu\"> <MenuIcon /> </IconButton>\n          <React.Fragment key=\"left\">\n            <Drawer anchor=\"left\" open={state[\"left\"]} onClose={toggleDrawer(\"left\", false)}>\n              {list}\n            </Drawer>\n          </React.Fragment>\n          <Typography variant=\"h6\" className={classes.title}> My App </Typography>\n          <Link to=\"/logout\" className={classes.logoutLink} >Logout</Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport Auth from './common/Auth';\r\nimport Login from './common/Login';\r\nimport Logout from './common/Logout';\r\n\r\nimport Home from './pages/Home';\r\nimport List1 from './pages/List1';\r\nimport List2 from './pages/List2';\r\nimport Tutorial from './pages/Tutorial';\r\n\r\nimport Header from \"./common/Header\"\r\n// import Footer from \"./common/Footer.js\"\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/logout\" component={Logout} />\r\n\r\n          <Auth>\r\n            <Header />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/list1\" component={List1} />\r\n              <Route exact path=\"/list2\" component={List2} />\r\n              <Route exact path=\"/tutorial\" component={Tutorial} />\r\n              <Redirect from=\"/\" to=\"/\" />\r\n            </Switch>\r\n            {/* <Footer /> */}\r\n          </Auth>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}